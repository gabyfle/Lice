name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        ocaml-compiler:
          - "5.1"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install dependencies
        run: opam install . --deps-only --with-test

      - name: Build Lice libraries and executables
        run: opam exec -- dune build

      - name: Run tests
        run: opam exec -- dune runtest

  lint-fmt:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Install OCaml
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "5.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-fmt@v2

      - name: Upload playground.bc.js
        uses: actions/upload-artifact@v4
        with:
          name: playground
          path: _build/default/doc/ocaml/playground.bc.js

  deploy-site:
    needs: [build, lint-fmt]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download playground.bc.js
        uses: actions/download-artifact@v2
        with:
          name: playground
          path: doc/assets/playground.bc.js
      
      - name: Deploy to VPS Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "/doc/"
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.PATH }}
          EXCLUDE: "/ocaml/, *.md"
